name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  server-test:
    strategy:
      matrix:
        dbversion: ['mysql:5.7']
        go: ['1.17', '1.16']
        mqversion: ['rabbitmq:3.8']
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}

    services:
      mysql:
        image: ${{ matrix.dbversion }}
        env:
          MYSQL_DATABASE: final
          MYSQL_USER: final
          MYSQL_PASSWORD: final
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
        ports:
          - 9910:3306
        options: >-
          --health-cmd "mysqladmin ping -ufinal -pfinal"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
      rabbitmq:
        image: ${{ matrix.mqversion }}
        env:
          RABBITMQ_DEFAULT_VHOST: final
          RABBITMQ_DEFAULT_USER: final
          RABBITMQ_DEFAULT_PASS: final
        ports:
          - 9911:5672

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: go mod package cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('tests/go.mod') }}

      - name: Test
        run: |
          export MYSQL_CONN_STR="final:final@tcp(localhost:9910)/final?charset=utf8&parseTime=True"
          export AMQP_CONN_STR="amqp://final:final@localhost:9911/final"
          make test

      - name: Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./cover.out
          flags: unittests
          name: codecov-umbrella


